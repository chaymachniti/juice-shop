name: "ZAP Baseline Scan"

on:
  push:
    branches:
      - master

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    env:
      CI_COMMIT_SHORT_SHA: ${{ github.sha }}
      CI_COMMIT_SHA: ${{ github.sha }}
      CI_COMMIT_REF_NAME: ${{ github.ref }}
      CI_PROJECT_URL: ${{ github.repository_url }}
      DEFECTDOJO_HOST: ${{ secrets.DEFECTDOJO_HOST }}
      DEFECTDOJO_USER: ${{ secrets.DEFECTDOJO_USER }}
      DEFECTDOJO_PASSWORD: ${{ secrets.DEFECTDOJO_PASSWORD }}
      VERSION: "1.0.0"
      CI_PIPELINE_ID: ${{ github.run_id }}

    name: Scan the webapplication
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: master
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: cchniti
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: cchniti/juice-shop:latest
          build-args: |
            NODE_ENV=production

      - name: Run Docker container
        run: |
            docker run -d -p 3000:3000 --name my-node-app cchniti/juice-shop:latest




#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v1
#        with:
#          node-version: ${{ matrix.node-version }}
#      - name: npm install
#        run: |
#          npm ci
#          npm run build --if-present
#        env:
#          CI: true
#      - name: run auditjs
#        run: |
#          npx auditjs@latest iq > audit-report.json
#      - name: Upload audit report
#        uses: actions/upload-artifact@v2
#        with:
#          name: audit-report
#          path: audit-report.json

#      - name: ZAP Scan
#        uses: zaproxy/action-baseline@v0.12.0
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
#          target: 'https://www.zaproxy.org'
#          rules_file_name: '.zap/rules.tsv'
#          cmd_options: '-x report_xml.xml'
#
#
#      - name: Upload XML report to artifacts
#        uses: actions/upload-artifact@v3
#        with:
#          name: zap-report
#          path: report_xml.xml
      - name: Install Perl
        run: |
          sudo apt update
          sudo apt install -y perl

      - name: Clone Nikto repository
        run: git clone https://github.com/sullo/nikto

      - name: Run Nikto scan
        run: |
          perl ./nikto/program/nikto.pl -h http://localhost:3000 -o /tmp/nikto-scan-report.xml || true

      - name: Save Nikto scan report
        run: cp /tmp/nikto-scan-report.xml .

      - name: Upload Nikto scan report
        uses: actions/upload-artifact@v2
        with:
          name: nikto-scan-report
          path: ./nikto-scan-report.xml

      - name: Download and extract artifact
        uses: actions/download-artifact@v2
        with:
          name: nikto-scan-report
          path: .zap
      - name: nodejsscan scan
        id: njsscan
        uses: ajinabraham/njsscan-action@master
        with:
          args: '-o njsscan-report.json .'

      - name: Upload njsscan report
        uses: actions/upload-artifact@v2
        with:
          name: njsscan-report
          path: .zap
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Run Dependency-Check Scan
        run: |
          docker run --rm \
          -v $(pwd):/src \
          owasp/dependency-check:latest \
          --scan /src \
          --format "XML" \
          --project "${{ github.repository }}" \
          --out /src/dependency-check-report.xml \
          --suppression /src/owasp-depscan-suppress.xml

          - name: Upload Dependency-Check Report
            uses: actions/upload-artifact@v2
            with:
              name: dependency-check-report
              path: dependency-check-report.xml

      - name: Install pip
        run: |
          sudo apt update
          sudo apt install -y python3-pip

      - name: install requests
        run: |
          pip install requests
      - name: DefectDojo Settings
        run: |
          python scripts/defectdojo_settings.py
      - name: DefectDojo Scan
        run: |
          python scripts/send_scans.py